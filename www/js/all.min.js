(function(){angular.module("app.controllers",["app.services"]).controller("AppController",["$scope","$sce","$timeout","$window","$q","HackerNews",function(e,t,r,o,n,l){return e.section="top",e.gotoStory=function(r){return e.currentStory=r,e.storyUrl=t.trustAsResourceUrl(r.url),e.navi.pushPage("story.html")},e.loadUrl=function(e){return o.open(e,"_system")},e.getStory=function(e){var t,o;return t=n.defer(),o=r(t.resolve,1e3),l.child("item/"+e).once("value",function(e){var n;return n=e.val(),n&&"story"===n.type&&!n.deleted&&n.url?(r.cancel(o),t.resolve(n)):(r.cancel(o),t.resolve())}),t.promise}}]).controller("TopController",["$scope","$q","HackerNews",function(e,t,r){return e.stories=[],e.getTopStories=function(){return r.child("topstories").limitToFirst(20).once("value",function(r){var o,n,l,i,s;for(n=r.val(),console.log(n),l=[],i=0,s=n.length;s>i;i++)o=n[i],l.push(e.getStory(o));return t.all(l).then(function(t){return t=t.filter(function(e){return"undefined"!=typeof e}),t.length>0?e.stories=t:void 0})})},r.child("topstories").on("value",e.getTopStories)}]).controller("LatestController",["$scope","$q","HackerNews",function(e,t,r){return e.stories=[],e.getLatestStories=function(){return r.child("maxitem").once("value",function(r){var o,n,l,i,s;for(n=r.val(),console.log(n),l=[],o=i=n,s=n-100;s>=n?s>i:i>s;o=s>=n?++i:--i)l.push(e.getStory(o));return t.all(l).then(function(t){return t=t.filter(function(e){return"undefined"!=typeof e}),t.length>0?e.stories=t:void 0})})},r.child("maxitem").on("value",e.getLatestStories)}])}).call(this);
(function(){angular.module("app.services",[]).factory("HackerNews",function(){var e;return e=new Firebase("https://hacker-news.firebaseio.com/v0")})}).call(this);
(function(){angular.module("app",["onsen","app.controllers","app.services"]).filter("urlToHost",function(){return function(n){var t,e;return t=n.replace(/^http(s)?:\/\//,""),t=t.split("/")[0],e=t.split("."),e.slice(e.length-2,e.length).join(".")}}).filter("timeAgo",function(){return function(n){var t,e,o,r,a,u,s,i;return t=(new Date).getTime(),i=1e3*parseInt(n),a=6e4,r=60*a,o=24*r,u=30*o,s=365*o,e=t-i,a>e?Math.round(e/1e3)+" seconds ago":r>e?Math.round(e/a)+" minutes ago":o>e?Math.round(e/r)+" hours ago":u>e?Math.round(e/o)+" days ago":s>e?Math.round(e/u)+" months ago":Math.round(e/s)+" years ago"}})}).call(this);
//# sourceMappingURL=data:application/json;base64,